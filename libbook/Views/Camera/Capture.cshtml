@{
    Layout = null;
}
@{int idStudent = ViewBag.IdStudent; }
<!DOCTYPE html>
<html>
<head>

    <meta name="viewport" content="width=device-width" />

    <link href="~/Content/Site.css" type="text/css" />
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    <style>
        .centerForm {
            margin-top: 0 auto;
            display: flex;
            align-items: center;
            justify-content: center;
        }
    </style>

    <style>
        .d-none {
            display: none;
        }

        canvas {
            height: 100vh;
            width: 100vw;
            display: block;
        }

        video {
            position: fixed;
            right: 0;
            bottom: 0;
            min-width: 100%;
            min-height: 100%;
            width: auto;
            height: auto;
            z-index: -100;
            background: no-repeat;
            background-size: cover;
        }

        .buttons {
            position: absolute;
            bottom: 0;
            z-index: 1;
            width: 100%;
            text-align: center;
        }
    </style>
</head>
<body>
   
    <div class="video">
        <div class="centerForm">
            <video id="capturevideo" class="d-none"></video>
            <canvas id="capturecanvas" class="d-none"></canvas>
            <div class="buttons">
                <div class="centerForm">
                    <button type="button" id="btnCapture" class="btn btn-primary btn-lg btn-block">Сканировать</button>
                </div>
            </div>
        </div>
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        var videoCapture;
        var data_uri;
        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
            // access video stream from webcam
            navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } }).then(function (stream) {
                // on success, stream it in video tag

                window.localStream = stream;
                videoCapture.srcObject = stream;
                videoCapture.play();
                activateCamera();
            }).catch(e => {
                // on failure/error, alert message.
                alert("Please Allow: Use Your Camera!");
            });
        }
        $("#capturevideo").removeClass("d-none");
        $("#btnCapture").removeClass("d-none");
        $("#capturecanvas").removeClass("d-none");

$(document).ready(function () {
    videoCapture = document.getElementById('capturevideo');
});


//$(document).on('click', '#btnActivateCamera', function () {
    
//});
$(document).on('click', '#btnDeactivateCamera', function () {
    // stop video streaming if any
    localStream.getTracks().forEach(function (track) {
        if (track.readyState == 'live' && track.kind === 'video') {
            track.stop();
            deactivateCamera();
        }
    });
});

$(document).on('click', '#btnCapture', function () {
    cap();
});
function activateCamera() {
    //$("#btnActivateCamera").addClass("d-none");
    $("#btnDeactivateCamera").removeClass("d-none");
    $("#capturevideo").removeClass("d-none");
    $("#btnCapture").removeClass("d-none");
    $("#capturecanvas").removeClass("d-none");
}
function deactivateCamera() {
    $("#btnDeactivateCamera").addClass("d-none");
   // $("#btnActivateCamera").removeClass("d-none");
    $("#capturevideo").addClass("d-none");
    $("#btnCapture").addClass("d-none");
    $("#capturecanvas").addClass("d-none");
}
            function cap() {
                var canvas = document.getElementById('capturecanvas');
                var video = document.getElementById('capturevideo');
                canvas.width = video.videoWidth;
                canvas.height = video.videoHeight;
                canvas.getContext('2d').drawImage(video, 0, 0, video.videoWidth, video.videoHeight); // for drawing the video element on the canvas

                /** Code to merge image **/

                const playImage = new Image();

                playImage.onload = () => {
                    const startX = (video.videoWidth / 2) - (playImage.width / 2);
                    const startY = (video.videoHeight / 2) - (playImage.height / 2);
                    canvas.getContext('2d').drawImage(playImage, startX, startY, playImage.width, playImage.height);
                    
                };
                data_uri = canvas.toDataURL("image/jpeg");
                base64String = data_uri.replace("data:", "").replace(/^.+,/, "");
                data_uri = base64String;


                submitForm(data_uri);

            }


function submitForm(data_uri) {

    var model = data_uri;
    jQuery.ajax({
        type: "POST",
        url: "@Url.Action("Capture","Camera")",
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        data: JSON.stringify({ filePath: model, idSt: @idStudent }),
        success: function (response) {
            if (response) {
                window.location.href = response.redirectToUrl;
            }
        },
        failure: function (response) {
            alert(errMsg);
        }
    });

}
downloadImage = function (name, datauri) {
    var a = document.createElement('a');
    a.setAttribute('download', name);
    a.setAttribute('href', datauri);
    a.click();
}
    </script>
</body>
</html>